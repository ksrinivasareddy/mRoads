package com.smarttrip.service;

import com.smarttrip.entity.Trip;
import com.smarttrip.entity.TripInsights;
import com.smarttrip.repository.TripRepository;
import com.smarttrip.repository.TripInsightsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.io.FileOutputStream;
import java.io.OutputStream;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;

@Service
public class ReportService {

    @Autowired
    private TripRepository tripRepository;

    @Autowired
    private TripInsightsRepository tripInsightsRepository;

    @Autowired
    private EmailService emailService;

    public String generateTripReport(Long tripId) {
        Trip trip = tripRepository.findById(tripId)
                .orElseThrow(() -> new RuntimeException("Trip not found"));

        TripInsights insights = tripInsightsRepository.findByTripId(tripId)
                .orElseThrow(() -> new RuntimeException("Insights not found for this trip"));

        String fileName = "Trip_Report_" + tripId + ".pdf";

        try (OutputStream out = new FileOutputStream(fileName)) {
            Document document = new Document(PageSize.A4, 50, 50, 50, 50);
            PdfWriter.getInstance(document, out);
            document.open();

            Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 20, BaseColor.DARK_GRAY);
            document.add(new Paragraph("SmartTrip - Trip Report\n\n", titleFont));

            Font sectionFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14);
            Font normalFont = FontFactory.getFont(FontFactory.HELVETICA, 12);

            document.add(new Paragraph("Trip Details", sectionFont));
            document.add(new Paragraph("Destination: " + trip.getDestination(), normalFont));
            document.add(new Paragraph("Budget: $" + trip.getBudget(), normalFont));
            document.add(new Paragraph("Start Date: " + trip.getStartDate(), normalFont));
            document.add(new Paragraph("End Date: " + trip.getEndDate() + "\n\n", normalFont));

            document.add(new Paragraph("Trip Insights", sectionFont));
            document.add(new Paragraph("Weather: " + insights.getWeather(), normalFont));
            document.add(new Paragraph("Currency Rate: " + insights.getCurrencyRate(), normalFont));
            document.add(new Paragraph("Recommendations: " + insights.getRecommendations(), normalFont));
            document.add(new Paragraph("Safety Tips: " + insights.getSafetyTips(), normalFont));
            document.add(new Paragraph("Budget Tips: " + insights.getBudgetTips() + "\n\n", normalFont));

            document.add(new Paragraph("Generated by SmartTrip", 
                FontFactory.getFont(FontFactory.HELVETICA_OBLIQUE, 10, BaseColor.GRAY)));

            document.close();

            // ✅ Send report via email
            if (trip.getUser() != null && trip.getUser().getEmail() != null) {
                String toEmail = trip.getUser().getEmail();
                emailService.sendTripReport(
                        toEmail,
                        "Your SmartTrip Report: " + trip.getDestination(),
                        "<h3>Hi " + trip.getUser().getName() + ",</h3>"
                                + "<p>Your trip report for <b>" + trip.getDestination() + "</b> is ready!</p>"
                                + "<p>Find the PDF attached below.</p><br><b>SmartTrip Team</b>",
                        fileName
                );
            }

            return "✅ Report generated and emailed successfully to " + trip.getUser().getEmail() + ": " + fileName;

        } catch (Exception e) {
            throw new RuntimeException("Error generating or sending report: " + e.getMessage());
        }
    }
}
